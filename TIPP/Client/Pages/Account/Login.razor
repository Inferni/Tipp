@page "/account/login"
@using TIPP.Shared
@inject Service.IUserDataServiceLogin UserService
@inject Service.IUserDataService UserDataService

@inject NavigationManager NavigationManager

<div class="card">
    <h4 class="card-header">Login</h4>
    <div class="card-body">
        <EditForm Model="@model" OnValidSubmit="OnValidSubmit">
            <DataAnnotationsValidator />
            <div class="form-group">
                <label>Username</label>
                <InputText @bind-Value="model.Username" class="form-control" />
                <ValidationMessage For="@(() => model.Username)" />
            </div>
            <div class="form-group">
                <label>Password</label>
                <InputText @bind-Value="model.Password" type="password" class="form-control" />
                <ValidationMessage For="@(() => model.Password)" />
            </div>
            <button disabled="@loading" class="btn btn-primary">
                @if (loading)
                {
                    <span class="spinner-border spinner-border-sm mr-1"></span>
                }
                Login
            </button>
            <NavLink href="account/register" class="btn btn-link">Register</NavLink>
        </EditForm>
    </div>
</div>

@code {
    private Models.Login model = new Models.Login();
    private bool loading;

    private async void OnValidSubmit()
    {
        loading = true;
        try
        {
            TIPP.Shared.User user = await UserService.Login(model);
            if (user != null)
            {
                StateHasChanged();
                await UserDataService.Initialize();

            }

            switch (user.Role)
            {
                case TIPP.Shared.Role.User:
                    NavigationManager.NavigateTo("/user/{user.Id}");
                    @*<p><NavLink href="/user/{UserService.User.Id}">Ga naar jouw projecten</NavLink></p>*@
                    break;
                case TIPP.Shared.Role.Admin:
                    @*<p><NavLink href="/admin/{UserService.User.Id}">Ga naar de projecten</NavLink></p>*@
                    break;
                default:
                    break;
            }
            

        }
        catch (Exception ex)
        {
            loading = false;
            StateHasChanged();
        }
    }
}
